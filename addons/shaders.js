module.exports = {
    glowVertex: [
        'uniform vec3 viewVector;',
        'uniform float force;',
        'varying float intensity;',
        'void main() {',
        'gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( position, 1.0 );',
        'vec3 actual_normal = vec3(modelMatrix * vec4(normal, 0.0));',
        'intensity = pow( dot(normalize(viewVector), actual_normal), force );',
        '}',
    ].join('\n'),
    glowFragment: [
        'uniform float alpha;',
        'uniform vec3 glowVec3;',
        'varying float intensity;',
        'void main() {',
        'vec3 glow = glowVec3 * intensity;',
        'gl_FragColor = vec4( glow, alpha );',
        '}',
    ].join('\n'),
    saturnRingVertex: [
        'attribute float base_angle;',
        'attribute float offsetX;',
        'attribute float offsetZ;',
        'uniform vec3 stretch;',
        'uniform float time;',
        'varying vec4 vUv;',
        'varying vec2 offset;',
        'void main() {',
        'vec3 p = position;',
        'offset = vec2(offsetX, offsetZ);',
        'p.x = (stretch.x + offsetX)*cos( base_angle + time );',
        'p.z = (stretch.z + offsetZ)*sin( base_angle + time );',
        'p.y += (stretch.y + offsetX/10.0)*cos( base_angle + time );',
        'gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);',
        'vUv = projectionMatrix * vec4(p, 1.0);',
        'gl_PointSize = 1.0;',
        '}',
    ].join('\n'),
    saturnRingFragment: [
        'varying vec4 vUv;',
        'varying vec2 offset;',
        'uniform float shadowType;',
        'void main() {',
        'if( abs(offset.x) >= 30.0 || abs(offset.y) >= 10.0)',
        'gl_FragColor = vec4(0.7, 0.7, 0.65, 0.90);',
        'else',
        'gl_FragColor = vec4(0.58, 0.49, 0.45, 0.90);',
        'if((shadowType == 0.0 && vUv.z > 0.0) || (shadowType == 1.0 && vUv.z > 0.0 && abs(vUv.x) < 64.0))',
        'gl_FragColor = gl_FragColor - vec4(vUv.zzz*0.0076, 0.0);',
        '}',
    ].join('\n')
};